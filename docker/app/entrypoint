#!/usr/bin/env bash

# If there is a command line argument, run it as the www-data user
if [ $# -gt 0 ]; then
    exec gosu www-data "$@"
fi

# Helper functions
function enableSSL() {
    echo "Checking SSL files"
    if [ -e /local/certs/fullchain.pem -a -e /local/certs/privkey.pem ]; then
        echo "Files found, enabling SSL"
        ln -s /etc/nginx/snippets-available/ssl /etc/nginx/snippets/ssl
    else
        echo "Files not found, skipping SSL"
    fi
}


function addSupervisorConfig() {
    CONFIG_DIR="/etc/supervisor/conf.d"
    SUPERVISORD_CONFIG="$CONFIG_DIR/supervisord.conf"
    CONFIG="$CONFIG_DIR/$1.conf"

    echo "Adding $CONFIG supervisor config $SUPERVISORD_CONFIG"
    echo >> "$SUPERVISORD_CONFIG"
    echo >> "$SUPERVISORD_CONFIG"
    cat "$CONFIG" >> "$SUPERVISORD_CONFIG"
}


# Set the container role, use 'all' as fallback
CONTAINER_ROLE="${CONTAINER_ROLE:-all}" 

case $CONTAINER_ROLE in
  web)
    echo "Web container"

    export PHP_PM_MAX_CHILDREN="${PHP_PM_MAX_CHILDREN:-100}"

    enableSSL

    addSupervisorConfig 'nginx'
    addSupervisorConfig 'php-fpm'

    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    ;;

  dev)
    echo "Dev container"

    export PHP_PM_MAX_CHILDREN="${PHP_PM_MAX_CHILDREN:-5}"

    if [ "$ENABLE_XDEBUG" == "yes" ]; then
        echo "Enabling xdebug"
        docker-php-ext-enable xdebug
    fi

    enableSSL

    echo "Enabling opcache timestamps"
    sed -i 's/opcache.validate_timestamps=.*/opcache.validate_timestamps=1/' /usr/local/etc/php/conf.d/opcache.ini

    addSupervisorConfig 'nginx'
    addSupervisorConfig 'php-fpm'
    addSupervisorConfig 'cron'
    addSupervisorConfig 'horizon'

    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    ;;

  all)
    echo "All-in-one container"

    export PHP_PM_MAX_CHILDREN="${PHP_PM_MAX_CHILDREN:-100}"

    pilos-cli init

    enableSSL

    addSupervisorConfig 'nginx'
    addSupervisorConfig 'php-fpm'
    addSupervisorConfig 'cron'
    addSupervisorConfig 'horizon'

    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    ;;  
  *)
    echo "Invalid container role '$CONTAINER_ROLE' use one of: web, dev, all"
    exit 1
    ;;
esac