// To customize the colors, edit _variables.scss
//@import 'variables';
//@import '../../base';

// The contrast ratio to reach against white, to determine if color changes from "light" to "dark". Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast

$white:    #fff !default;
$black:    #000 !default;

$min-contrast-ratio:   2.5 !default;

// Customize the light and dark text colors for use in our color contrast function.
$color-contrast-dark:      $black !default;
$color-contrast-light:     $white !default;

// Body background
$bodyBg: #f8fafc;

// Colors
$blue: #2980b9;
$red: #c0392b;
$orange: #d35400;
$green: #27ae60;
$purple: #8e44ad;

// Branding color
$primary: #3BBC9C;
$link-color: $primary;

// Recommended to use a black/grey, color is used for some buttons and most text
$secondary: #2C3E50;
$body-color: $secondary;

// Semantic colors
$success: $green;
$info: $blue;
$warning: $orange;
$danger: $red;
$help: $purple;

@import 'functions';

$primaryColor: $primary !default;
$primaryLightColor: #a7f3d0 !default;
$primaryDarkColor: #059669 !default;
$primaryDarkerColor: #047857 !default;
$primaryTextColor: #ffffff !default;

$highlightBg: #F0FDFA !default;
$highlightTextColor: $primaryDarkerColor !default;
$highlightFocusBg: rgba($primaryColor, .24) !default;

//$borderRadius: 0px;

// Typography
@import './_fonts';

$fontFamily: SourceSansPro, sans-serif;

@import './_variables';
@import 'primevue-sass-theme/theme-base/_components';
@import './_extensions';
@import "streched-link";
@import 'primeflex/primeflex.css';
@import '../../app/_room';

// Font Awesome
$fa-font-path: "@fortawesome/fontawesome-free/webfonts";
@import "@fortawesome/fontawesome-free/scss/fontawesome";
@import "@fortawesome/fontawesome-free/scss/solid";


// Height of footer
$footer-height: 25px !default;

body {
    background-color: var(--surface-ground);
}


html, body, #app, #app > .overlay-wrap {
    height: 100%;
}

body {
    margin: 0;
}

.app {
    display: flex;
    flex-direction: column;
    height: 100%;
}

header {
    flex-shrink: 0;
}

main {
    flex: 1 0 auto;
}

footer {
    flex-shrink: 0;
}


.container {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto
}

@media (min-width: 576px) {
    .container {
        max-width:540px
    }
}

@media (min-width: 768px) {
    .container {
        max-width:720px
    }
}

@media (min-width: 992px) {
    .container {
        max-width:960px
    }
}

@media (min-width: 1200px) {
    .container {
        max-width:1140px
    }
}

.overlay-spinner {
    position: fixed !important;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
    z-index: 1102; /* this seems to work for me but may need to be higher*/

    display: flex;
    justify-content: center;
    align-items: center;
}

a:-webkit-any-link,
a:any-link {
    text-decoration: none;
}

.p-inputswitch, .p-inputswitch-slider {
    width: 1.75rem;
    height: 1rem;
}
.p-inputswitch .p-inputswitch-slider {
    border-radius: 30px;
}
.p-inputswitch .p-inputswitch-slider:before {
    width: calc(1rem - 4px);
    height: calc(1rem - 4px);
    left: 2px;
    margin-top: calc(-0.5rem + 2px);
    border-radius: 50%;
    transition-duration: 0.2s;
}
.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider:before {
    transform: translateX(calc(1rem - 4px - 2px));
}

.p-error {
    margin: 0;

    ul{
        margin: 0;
        padding: 0 1.5rem;
    }
}

.p-tabview-header-action-button {
    padding: $buttonPadding;
}

.p-button-block{
    display: flex;
    justify-content: center;
    width: 100%;

    .p-button-label {
        flex: none;
    }
}

.p-toast .p-toast-message .p-toast-message-content {
    padding: 0.5rem 1rem;
}

.room-tabs {
    .p-tabview-nav {
        display: flex;
        flex-wrap: wrap;

        .p-tabview-header-action {
            border-radius: 0;
            padding: 0.5rem 1rem;
            margin-top:10px;
        }
    }
}

