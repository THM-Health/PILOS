name: CI

on:
  push:
    branches:
      - master
      - develop
      - '[0-9].x'
  pull_request:
jobs:
  pilos-backend:
    name: Backend (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10
        ports:
          - 3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.3']
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Verify MariaDB connection
      env:
        PORT: ${{ job.services.mariadb.ports[3306] }}
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
          sleep 1
        done
    - name: Install pipe viewer tool
      run: |
          sudo apt-get update
          sudo apt-get install pv
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: bcmath, ctype, fileinfo, json, mbstring, dom, ldap, pdo, tokenizer, xml, mysql, sqlite
        coverage: pcov
    - name: Copy .env
      run: php -r "copy('.env.ci', '.env');"
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Get composer cache keys
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.php-versions }}-composer-
    - name: Install php dependencies
      run: |
        composer self-update
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Migrate Database
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        DB_DATABASE: test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan migrate --no-interaction -vvv
    - name: Execute code style check via Laravel Pint
      run: vendor/bin/pint --test
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork }}
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        DB_DATABASE: test
        DB_USERNAME: root
        DB_PASSWORD: password
        LOG_CHANNEL: stack
      run: php artisan test --parallel --testsuite=Unit,Feature --coverage-clover=coverage.xml
    - name: Execute tests (Unit, Feature and Integration tests) via PHPUnit
      if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        DB_DATABASE: test
        DB_USERNAME: root
        DB_PASSWORD: password
        LOG_CHANNEL: stack
        TESTING_BBB: ${{ secrets.TESTING_BBB }}
      run: php artisan test --parallel --testsuite=Unit,Feature --coverage-clover=coverage.xml
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload laravel logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ${{ runner.os }}-${{ matrix.php-versions }}-laravel.log
        path: storage/logs/laravel.log
  pilos-frontend:
          name: Frontend
          runs-on: ubuntu-latest
          steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Copy .env
              run: php -r "copy('.env.example', '.env');"
            - name: Get NPM Cache Directory
              id: npm-cache
              run: |
                echo "::set-output name=dir::$(npm config get cache)"
            - name: Get NPM Cache Keys
              uses: actions/cache@v2
              with:
                path: ${{ steps.npm-cache.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.php-versions }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.php-versions }}-node-
            - name: Install dependencies
              run: npm ci
            - name: Execute frontend code style check via eslint
              run: npm run lint
            #- name: Execute frontend tests
            #  env:
            #    LARAVEL_BYPASS_ENV_CHECK: 1
            #  run: npm run cover
            #- name: Upload coverage
            #  uses: codecov/codecov-action@v3
            #- name: Upload npm logs
            #  uses: actions/upload-artifact@v2
            #  if: failure()
            #  with:
            #    name: npm-debug.log
            #    path: /home/runner/.npm/_logs/*-debug.log
