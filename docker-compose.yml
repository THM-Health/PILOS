# For more information: https://laravel.com/docs/sail
version: '3'
services:
    app:
        image: pilos/pilos:latest
        ports:
          - '127.0.0.1:5000:80'
          - '127.0.0.1:9000:81'
        env_file:
          - .env
        environment:
          TRUSTED_PROXIES: "*"
          PHP_PM_MAX_CHILDREN: "100"
        volumes:
          - './storage/:/var/www/html/storage/'
          - './resources/custom:/var/www/html/resources/custom'
          - './app/Auth/config:/var/www/html/app/Auth/config'
          - './public/images/custom:/var/www/html/public/images/custom'
          - './public/build:/var/www/html/public/build'
          - './resources/sass/theme/custom:/var/www/html/resources/sass/theme/custom'
        sysctls:
          net.core.somaxconn: 65536
          net.ipv4.ip_local_port_range: "2000 65535"
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_fin_timeout: 30
        healthcheck:
          test: curl --fail http://localhost/health || exit 1
          interval: 10s
          retries: 6  
          timeout: 5s
        depends_on:
          db:
            condition: service_healthy
          redis:
            condition: service_healthy
    task:
        image: pilos/pilos:local-dev
        env_file:
          - .env
        depends_on:
          app:
            condition: service_healthy
        entrypoint: ["su", "www-data", "-s", "/bin/bash", "-c", "php artisan schedule:work"]
    horizon:
        image: pilos/pilos:local-dev
        env_file:
          - .env
        depends_on:
          app:
            condition: service_healthy
        entrypoint: ["su", "www-data", "-s", "/bin/bash", "-c", "php artisan horizon"]
    db:
      image: 'mariadb:10'
      environment:
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
        MYSQL_RANDOM_ROOT_PASSWORD: 'true'
      volumes:
        - './db:/var/lib/mysql'
      healthcheck:
        test: [ "CMD", "mysqladmin", "ping", "-u${DB_USERNAME}", "-p${DB_PASSWORD}" ]
        interval: 10s
        retries: 6
        timeout: 5s
    redis:
      image: redis:7.2-alpine3.18
      restart: unless-stopped
      volumes:
        - ./redis/data:/data
      healthcheck:
        test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
        interval: 10s
        retries: 6  
        timeout: 5s
    
